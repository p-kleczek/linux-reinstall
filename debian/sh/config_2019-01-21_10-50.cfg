#!/bin/bash

# ============================================================================
#                       << PARAMETRY KONFIGURACYJNE >>
# ============================================================================

USERNAME='pkleczek'
APPS_DIR='/home/$USERNAME/Applications'


# ============================================================================
#                       << FUNKCJE POMOCNICZE >>
# ============================================================================

logmisc() { printf "  > %s\n" "$*" >&2; }
echoerr() { printf "\n\n  $(tput setaf 1)$(tput setab 7)[ERROR] %s$(tput sgr 0)\n\n" "$*" >&2; }
echowarn() { printf "\n\n  $(tput setaf 4)$(tput setab 3)[WARN] %s$(tput sgr 0)\n\n" "$*" >&2; }
echoinf() { printf "\n\n  [INFO] %s$(tput sgr 0)\n\n" "$*" >&2; }

is_pkg_installed() {
	pkg=$1
	dpkg-query -W -f'${Status}' $pkg 2>/dev/null | grep -q 'ok installed'
	return $?
}


verify_pkg_installation() {
	pkg=$1; program_name=$2
    if apt-get -qq install $pkg; then
        echoinf "$program_name successfully installed."
    else
        echoerr "Installing \`$pkg\` failed"
    fi
}

simple_pkg_install() {
	pkg=$1
	if ! is_pkg_installed $pkg ; then
	    apt install -y $pkg
	fi
}

set_property() {
	CONFIG_FILE=$1
	PROPS_GROUP_NAME=$2
	PROP_KEY=$3
	PROP_VALUE=$4

	## DEBUG
	printf " f: $1\n g: $2\n k: $3\n v: $4\n\n"

	# Utwórz plik, jeśli nie istnieje.
	if ! [ -e "$CONFIG_FILE" ]; then
	    touch "$CONFIG_FILE"
	fi

	# Usuń wielokrotne nawiasy kwadratowe.
	PROPS_GROUP=$( echo "[$PROPS_GROUP_NAME]" | sed -r 's/\]+/\]/g' | sed -r 's/\[+/\[/g' )

	# (na potrzeby regex-ów)
	PROPS_GROUP_ESCAPED=$(echo "$PROPS_GROUP" | sed -r 's/\]/\\\]/g' | sed -r 's/\[/\\\[/g' )
	PROP_VALUE_ESCAPED=$(echo "$PROP_VALUE" | sed -r 's/\\/\\\\/g'| sed -r 's/\:/\\\:/g')

	EXPECTED_ENTRY="$PROP_KEY=$PROP_VALUE"
	EXPECTED_ENTRY_ESCAPED="$PROP_KEY=$PROP_VALUE_ESCAPED"

	key_line_no=0
	current_line_no=0
	current_group=''
	echo
	for line in $(< $CONFIG_FILE); do
		let current_line_no=current_line_no+1
		## DEBUG
		#echo Line:  $line
		#echo Group: $current_group
		if grep -q '^\[' <<< $line; then
			current_group=$line
		else
			## DEBUG
			#echo $PROP_KEY
			if [ $current_group = $PROPS_GROUP ] && grep -q "^$PROP_KEY" <<< "$line" ; then
				key_line_no=$current_line_no
				break
			fi
		fi
		## DEBUG
		#echo
	done

	echo $key_line_no

	exit

	# FIXME: uwzględnij tylko wpisy z danej grupy

	#if ! grep -q "$EXPECTED_ENTRY_ESCAPED" "$CONFIG_FILE"; then
	if [ key_line_no -eq 0 ]; then
		# Para Key=value niezdefiniowana.
        logmisc "$PROP_KEY=$PROP_VALUE in $PROPS_GROUP undefined..."
	    if grep -q "$PROPS_GROUP_ESCAPED" "$CONFIG_FILE"; then
	        if [ key_line_no -eq 0 ]; then
        	#if ! grep -q "$PROP_KEY" "$CONFIG_FILE"; then
	        	# Dodaj klucz.
	        	logmisc 'Key added.'
	            sed -i "s/^\[$PROPS_GROUP_NAME\]$/\[$PROPS_GROUP_NAME\]\n$EXPECTED_ENTRY_ESCAPED/" "$CONFIG_FILE"
	        else
	            # Zmień wartość opcji.
	        	logmisc 'Key modified.'
	            sed -i "${key_line_no}s/^$PROP_KEY=.*/$EXPECTED_ENTRY_ESCAPED/" "$CONFIG_FILE"
	        fi
	    else
	    	logmisc 'Group created.'
			printf "\n" >> "$CONFIG_FILE"
			echo "$PROPS_GROUP" >> "$CONFIG_FILE"
			echo "$EXPECTED_ENTRY" >> "$CONFIG_FILE"
			printf "\n" >> "$CONFIG_FILE"
	    fi
	    return 1  # zmiana
	else
		logmisc "$PROP_KEY=$PROP_VALUE defined."
		return 0  # brak zmian
	fi
}
